package grpc

// This file is automatically generated by the gRPC compiler.
// It provides the service interface for the Auth gRPC service.

// Normally, this would be generated automatically by protoc.
// For demonstration purposes, I'm providing a simplified version.

// UnimplementedAuthServiceServer provides an empty implementation of the AuthServiceServer interface.
type UnimplementedAuthServiceServer struct{}

func (UnimplementedAuthServiceServer) CreateRegistration(context.Context, *RegistrationRequest) (*RegistrationResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method CreateRegistration not implemented")
}

func (UnimplementedAuthServiceServer) ConfirmEmail(context.Context, *ConfirmEmailRequest) (*EmptyResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method ConfirmEmail not implemented")
}

func (UnimplementedAuthServiceServer) ResendCodeEmail(context.Context, *ResendCodeEmailRequest) (*CodeResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method ResendCodeEmail not implemented")
}

func (UnimplementedAuthServiceServer) SendLoginCodeEmail(context.Context, *SendLoginCodeEmailRequest) (*CodeResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method SendLoginCodeEmail not implemented")
}

func (UnimplementedAuthServiceServer) ConfirmLogin(context.Context, *ConfirmLoginRequest) (*TokenResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method ConfirmLogin not implemented")
}

func (UnimplementedAuthServiceServer) RefreshToken(context.Context, *RefreshTokenRequest) (*TokenResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method RefreshToken not implemented")
}

func (UnimplementedAuthServiceServer) ValidateToken(context.Context, *ValidateTokenRequest) (*UserResponse, error) {
	return nil, status.Error(codes.Unimplemented, "method ValidateToken not implemented")
}

// RegisterAuthServiceServer registers the AuthService server with the gRPC server.
func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

// Interface defining the AuthService gRPC service
type AuthServiceServer interface {
	CreateRegistration(context.Context, *RegistrationRequest) (*RegistrationResponse, error)
	ConfirmEmail(context.Context, *ConfirmEmailRequest) (*EmptyResponse, error)
	ResendCodeEmail(context.Context, *ResendCodeEmailRequest) (*CodeResponse, error)
	SendLoginCodeEmail(context.Context, *SendLoginCodeEmailRequest) (*CodeResponse, error)
	ConfirmLogin(context.Context, *ConfirmLoginRequest) (*TokenResponse, error)
	RefreshToken(context.Context, *RefreshTokenRequest) (*TokenResponse, error)
	ValidateToken(context.Context, *ValidateTokenRequest) (*UserResponse, error)
}

// Request and response structs for the AuthService
type RegistrationRequest struct {
	FirstName             string
	LastName              string
	Nickname              string
	Email                 string
	AcceptedPrivacyPolicy bool
}

type RegistrationResponse struct {
	RegistrationSessionId string
	CodeExpires           int64
	Code                  string
}

type ConfirmEmailRequest struct {
	RegistrationSessionId string
	Code                  string
}

type EmptyResponse struct{}

type ResendCodeEmailRequest struct {
	RegistrationSessionId string
}

type CodeResponse struct {
	CodeExpires int64
	Code        string
}

type SendLoginCodeEmailRequest struct {
	Email string
}

type ConfirmLoginRequest struct {
	Email string
	Code  string
}

type TokenResponse struct {
	AccessToken  string
	RefreshToken string
}

type RefreshTokenRequest struct {
	RefreshToken string
}

type ValidateTokenRequest struct {
	AccessToken string
}

type UserResponse struct {
	UserId   uint64
	Nickname string
	Email    string
	Role     string
}
